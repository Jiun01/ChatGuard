const DEBUG=!0;function debugLog(e,t){DEBUG&&console.log(`ChatGuard BG: ${e}`,t||"")}function checkAllSettingsDisabled(){return new Promise((e=>{chrome.storage.sync.get(["enableForInstagram","enableHighlighting","enableAutoReplacement","enableNotifications"],(t=>{const n=!t.enableForInstagram&&!t.enableHighlighting&&!t.enableAutoReplacement&&!t.enableNotifications;e(n)}))}))}async function updateBadgeText(){try{const e=await checkAllSettingsDisabled();chrome.action.setBadgeBackgroundColor({color:e?"#888888":"#474DFF"}),chrome.action.setBadgeText({text:e?"OFF":"ON"}),debugLog("Badge updated",e?"OFF":"ON")}catch(e){console.error("Error updating badge:",e)}}chrome.runtime.onInstalled.addListener((async()=>{debugLog("Extension installed/updated");const e={enableForInstagram:!0,enableHighlighting:!0,enableAutoReplacement:!0,enableNotifications:!0};chrome.storage.sync.get(Object.keys(e),(t=>{const n={};for(const[o,a]of Object.entries(e))n[o]=void 0!==t[o]?t[o]:a;chrome.storage.sync.set(n),debugLog("Settings initialized",n),updateBadgeText()}))})),chrome.runtime.onMessage.addListener(((e,t,n)=>{if(debugLog("Message received",e),"LOG"===e.type)debugLog("Content script log",e.message),n({success:!0});else{if("GET_SETTINGS"===e.type)return chrome.storage.sync.get(["enableForInstagram","enableHighlighting","enableAutoReplacement","enableNotifications"],(e=>{n({success:!0,settings:e})})),!0;if("triggerTestNotification"===e.action)return chrome.tabs.query({active:!0,currentWindow:!0},(e=>{e.length>0&&chrome.tabs.sendMessage(e[0].id,{action:"testNotification"},(e=>{debugLog("Test notification result",e)}))})),n({success:!0}),!0}})),chrome.storage.onChanged.addListener((async e=>{debugLog("Settings changed",e),updateBadgeText()})),chrome.action.onClicked.addListener((e=>{debugLog("Browser action clicked on tab",e.id),chrome.tabs.sendMessage(e.id,{action:"testNotification"},(e=>{debugLog("Test notification result",e)}))})),debugLog("Background script loaded and ready");