{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nimport _imports_0 from '@/assets/thank-you.svg';\nconst _hoisted_1 = {\n  key: 0,\n  class: \"feedback-page\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-actions\"\n};\nconst _hoisted_6 = {\n  key: 1,\n  class: \"thank-you-message\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_SidebarLayout = _resolveComponent(\"SidebarLayout\");\n  return _openBlock(), _createBlock(_component_SidebarLayout, null, {\n    default: _withCtx(() => [!$data.feedbackSubmitted ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"Abusive Word Suggestion:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.abusiveWord = $event),\n      placeholder: \"Enter a word to be added to the filter\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.abusiveWord]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"Reason:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.reason = $event),\n      placeholder: \"Why do you think this word should be filtered?\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.reason]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Other Feedback:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.otherFeedback = $event),\n      placeholder: \"Any other comments or suggestions for ChatGuard?\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.otherFeedback]])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n      class: \"btn submit-btn\",\n      onClick: _cache[3] || (_cache[3] = (...args) => $options.submitFeedback && $options.submitFeedback(...args))\n    }, \" Submit \")])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"h2\", null, \"Thank you !!\", -1 /* HOISTED */)), _cache[9] || (_cache[9] = _createElementVNode(\"p\", null, \"Your feedback means a lot !\", -1 /* HOISTED */)), _cache[10] || (_cache[10] = _createElementVNode(\"div\", {\n      class: \"thank-you-icon\"\n    }, [_createElementVNode(\"img\", {\n      src: _imports_0,\n      alt: \"Thank You\"\n    })], -1 /* HOISTED */)), _createElementVNode(\"button\", {\n      class: \"btn back-btn\",\n      onClick: _cache[4] || (_cache[4] = (...args) => $options.resetForm && $options.resetForm(...args))\n    }, \" Back \")]))]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_imports_0","key","class","_createBlock","_component_SidebarLayout","default","_withCtx","$data","feedbackSubmitted","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","type","_cache","$event","abusiveWord","placeholder","_hoisted_3","reason","_hoisted_4","otherFeedback","_hoisted_5","onClick","args","$options","submitFeedback","_hoisted_6","src","alt","resetForm","_"],"sources":["C:\\Users\\Jiun\\Desktop\\chatguard\\chatguard\\src\\views\\FeedbackPage.vue"],"sourcesContent":["<template>\r\n    <SidebarLayout>\r\n      <div class=\"feedback-page\" v-if=\"!feedbackSubmitted\">\r\n        <div class=\"form-group\">\r\n          <label>Abusive Word Suggestion:</label>\r\n          <input \r\n            type=\"text\" \r\n            v-model=\"abusiveWord\" \r\n            placeholder=\"Enter a word to be added to the filter\"\r\n          >\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label>Reason:</label>\r\n          <textarea \r\n            v-model=\"reason\" \r\n            placeholder=\"Why do you think this word should be filtered?\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-group\">\r\n          <label>Other Feedback:</label>\r\n          <textarea \r\n            v-model=\"otherFeedback\" \r\n            placeholder=\"Any other comments or suggestions for ChatGuard?\"\r\n          ></textarea>\r\n        </div>\r\n        \r\n        <div class=\"form-actions\">\r\n          <button class=\"btn submit-btn\" @click=\"submitFeedback\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"thank-you-message\" v-else>\r\n        <h2>Thank you !!</h2>\r\n        <p>Your feedback means a lot !</p>\r\n        \r\n        <div class=\"thank-you-icon\">\r\n          <img src=\"@/assets/thank-you.svg\" alt=\"Thank You\">\r\n        </div>\r\n        \r\n        <button class=\"btn back-btn\" @click=\"resetForm\">\r\n          Back\r\n        </button>\r\n      </div>\r\n    </SidebarLayout>\r\n  </template>\r\n  \r\n  <script>\r\n  import SidebarLayout from '@/components/SidebarLayout.vue'\r\n  \r\n  export default {\r\n    name: 'FeedbackPage',\r\n    components: {\r\n      SidebarLayout\r\n    },\r\n    data() {\r\n      return {\r\n        abusiveWord: '',\r\n        reason: '',\r\n        otherFeedback: '',\r\n        feedbackSubmitted: false\r\n      }\r\n    },\r\n    methods: {\r\n      submitFeedback() {\r\n        // In a real implementation, you would send this data to your backend\r\n        console.log('Feedback submitted:', {\r\n          abusiveWord: this.abusiveWord,\r\n          reason: this.reason,\r\n          otherFeedback: this.otherFeedback\r\n        })\r\n        \r\n        // For now, just mark as submitted to show the thank you message\r\n        this.feedbackSubmitted = true\r\n        \r\n        // In a real implementation, you might store this in Chrome storage\r\n        // to track user feedback\r\n      },\r\n      resetForm() {\r\n        // Reset the form and go back to feedback\r\n        this.abusiveWord = ''\r\n        this.reason = ''\r\n        this.otherFeedback = ''\r\n        this.feedbackSubmitted = false\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped>\r\n  @import '@/assets/styles/_variables.scss';\r\n  \r\n  .feedback-page {\r\n    .form-group {\r\n      margin-bottom: 20px;\r\n      \r\n      label {\r\n        display: block;\r\n        margin-bottom: 5px;\r\n        font-weight: bold;\r\n        color: $midnight-blue;\r\n      }\r\n      \r\n      input, textarea {\r\n        width: 100%;\r\n        padding: 8px;\r\n        border: 1px solid #ddd;\r\n        border-radius: 4px;\r\n        \r\n        &:focus {\r\n          outline: none;\r\n          border-color: $risd-blue;\r\n        }\r\n      }\r\n      \r\n      textarea {\r\n        min-height: 80px;\r\n        resize: vertical;\r\n      }\r\n    }\r\n    \r\n    .form-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      \r\n      .submit-btn {\r\n        background-color: $midnight-blue;\r\n        padding: 8px 20px;\r\n      }\r\n    }\r\n  }\r\n  \r\n  .thank-you-message {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    text-align: center;\r\n    \r\n    h2 {\r\n      margin-bottom: 10px;\r\n      color: $midnight-blue;\r\n    }\r\n    \r\n    p {\r\n      margin-bottom: 20px;\r\n    }\r\n    \r\n    .thank-you-icon {\r\n      margin: 20px 0;\r\n      \r\n      img {\r\n        width: 120px;\r\n      }\r\n    }\r\n    \r\n    .back-btn {\r\n      margin-top: 20px;\r\n      background-color: $midnight-blue;\r\n    }\r\n  }\r\n  </style>"],"mappings":";OAwCeA,UAA4B;;EAxC3CC,GAAA;EAEWC,KAAK,EAAC;;;EACJA,KAAK,EAAC;AAAY;;EASlBA,KAAK,EAAC;AAAY;;EAQlBA,KAAK,EAAC;AAAY;;EAQlBA,KAAK,EAAC;AAAc;;EA5BjCD,GAAA;EAmCWC,KAAK,EAAC;;;;uBAlCbC,YAAA,CA8CgBC,wBAAA;IA/CpBC,OAAA,EAAAC,QAAA,CAEM,MAgCK,C,CAhC6BC,KAAA,CAAAC,iBAAiB,I,cAAnDC,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,CAOM,OAPNC,UAOM,G,0BANJD,mBAAA,CAAuC,eAAhC,0BAAwB,sB,gBAC/BA,mBAAA,CAIC;MAHCE,IAAI,EAAC,MAAM;MANvB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOqBR,KAAA,CAAAS,WAAW,GAAAD,MAAA;MACpBE,WAAW,EAAC;mDADHV,KAAA,CAAAS,WAAW,E,KAKxBL,mBAAA,CAMM,OANNO,UAMM,G,0BALJP,mBAAA,CAAsB,eAAf,SAAO,sB,gBACdA,mBAAA,CAGY;MAjBtB,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAeqBR,KAAA,CAAAY,MAAM,GAAAJ,MAAA;MACfE,WAAW,EAAC;mDADHV,KAAA,CAAAY,MAAM,E,KAKnBR,mBAAA,CAMM,OANNS,UAMM,G,0BALJT,mBAAA,CAA8B,eAAvB,iBAAe,sB,gBACtBA,mBAAA,CAGY;MAzBtB,uBAAAG,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuBqBR,KAAA,CAAAc,aAAa,GAAAN,MAAA;MACtBE,WAAW,EAAC;mDADHV,KAAA,CAAAc,aAAa,E,KAK1BV,mBAAA,CAIM,OAJNW,UAIM,GAHJX,mBAAA,CAES;MAFDT,KAAK,EAAC,gBAAgB;MAAEqB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEC,QAAA,CAAAC,cAAA,IAAAD,QAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;OAAE,UAEvD,E,sBAIJf,mBAAA,CAWM,OAXNkB,UAWM,G,0BAVJhB,mBAAA,CAAqB,YAAjB,cAAY,sB,0BAChBA,mBAAA,CAAkC,WAA/B,6BAA2B,sB,4BAE9BA,mBAAA,CAEM;MAFDT,KAAK,EAAC;IAAgB,IACzBS,mBAAA,CAAkD;MAA7CiB,GAA4B,EAA5B5B,UAA4B;MAAC6B,GAAG,EAAC;6BAGxClB,mBAAA,CAES;MAFDT,KAAK,EAAC,cAAc;MAAEqB,OAAK,EAAAT,MAAA,QAAAA,MAAA,UAAAU,IAAA,KAAEC,QAAA,CAAAK,SAAA,IAAAL,QAAA,CAAAK,SAAA,IAAAN,IAAA,CAAS;OAAE,QAEhD,E;IA7CRO,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}